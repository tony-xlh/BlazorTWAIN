@inject IJSRuntime JS
@inject NavigationManager Navigator
@inject HttpClient Http
@inject BarcodeResultService ResultService
@using BlazorTWAIN_Server.Data
@page "/scanner"

<h1>Scanner</h1>

@if (isDesktop)
{
    <button class="btn btn-primary" @onclick="Scan">Scan</button>
}
<button class="btn btn-primary" @onclick="LoadImage">Load Image</button>
<button class="btn btn-primary" @onclick="Save">Save</button>
<div id="dwtcontrolContainer"></div>
<p>Operations for the selected one:</p>
<button class="btn btn-primary" @onclick="ReadBarcodesOfSelected">Read Barcodes (Server-Side)</button>

@if (decoding)
{
    <p><em>Decoding...</em></p>
}
else
{
    @if (@barcodeResults is not null)
    {
        <hr>
        <label>Results:</label>
        <ol class="list-group">
            @foreach (TextResult result in @barcodeResults)
            {
                <li class="list-group-item">@result.text</li>
            }
        </ol>
    }
}

@code{
    private Boolean decoding;
    private Boolean isDesktop;
    private DWT dwt;
    private List<TextResult> barcodeResults;

    protected override async void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            dwt = await DWT.CreateAsync(JS);
            isDesktop = await dwt.IsDesktop();
            StateHasChanged();
            await dwt.CreateDWT();
        }
    }

    private async Task Scan()
    {
        await dwt.Scan();
    }

    private async Task LoadImage()
    {
        await dwt.LoadImage();
    }

    private async Task Save()
    {
        await dwt.Save();
    }

    private async Task ReadBarcodesOfSelected()
    {
        decoding = true;
        await dwt.GetBase64OfSelected(Decode);
    }

    private void Decode(string data)
    {
        ReadBarcodes(data);
    }

    private void ReadBarcodes(string base64)
    {
        barcodeResults = ResultService.GetBarcodeResult(base64);
        decoding = false;
        StateHasChanged();
    }
}